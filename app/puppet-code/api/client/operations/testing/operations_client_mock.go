// Code generated by MockGen. DO NOT EDIT.
// Source: ../operations_client.go

// Package mock_operations is a generated GoMock package.
package mock_operations

import (
	reflect "reflect"

	runtime "github.com/go-openapi/runtime"
	gomock "github.com/golang/mock/gomock"
	operations "github.com/puppetlabs/pe-sdk-go/app/puppet-code/api/client/operations"
)

// MockClientService is a mock of ClientService interface.
type MockClientService struct {
	ctrl     *gomock.Controller
	recorder *MockClientServiceMockRecorder
}

// MockClientServiceMockRecorder is the mock recorder for MockClientService.
type MockClientServiceMockRecorder struct {
	mock *MockClientService
}

// NewMockClientService creates a new mock instance.
func NewMockClientService(ctrl *gomock.Controller) *MockClientService {
	mock := &MockClientService{ctrl: ctrl}
	mock.recorder = &MockClientServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientService) EXPECT() *MockClientServiceMockRecorder {
	return m.recorder
}

// Deploy mocks base method.
func (m *MockClientService) Deploy(params *operations.DeployParams, authInfo runtime.ClientAuthInfoWriter) (*operations.DeployOK, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deploy", params, authInfo)
	ret0, _ := ret[0].(*operations.DeployOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Deploy indicates an expected call of Deploy.
func (mr *MockClientServiceMockRecorder) Deploy(params, authInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deploy", reflect.TypeOf((*MockClientService)(nil).Deploy), params, authInfo)
}

// GetStatus mocks base method.
func (m *MockClientService) GetStatus(params *operations.GetStatusParams, authInfo runtime.ClientAuthInfoWriter) (*operations.GetStatusOK, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatus", params, authInfo)
	ret0, _ := ret[0].(*operations.GetStatusOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatus indicates an expected call of GetStatus.
func (mr *MockClientServiceMockRecorder) GetStatus(params, authInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockClientService)(nil).GetStatus), params, authInfo)
}

// SetTransport mocks base method.
func (m *MockClientService) SetTransport(transport runtime.ClientTransport) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTransport", transport)
}

// SetTransport indicates an expected call of SetTransport.
func (mr *MockClientServiceMockRecorder) SetTransport(transport interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTransport", reflect.TypeOf((*MockClientService)(nil).SetTransport), transport)
}
